//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : SharpLayout
	/// Data Source    : (local)\SQL2014
	/// Server Version : 12.00.2000
	/// </summary>
	public partial class SharpLayoutDB : LinqToDB.Data.DataConnection
	{
		public ITable<PaymentOrder>  PaymentOrders  { get { return this.GetTable<PaymentOrder>(); } }
		public ITable<SchemaVersion> SchemaVersions { get { return this.GetTable<SchemaVersion>(); } }

		public SharpLayoutDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public SharpLayoutDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="dbo", Name="PaymentOrder")]
	public partial class PaymentOrder
	{
		[PrimaryKey, NotNull] public int      Id            { get; set; } // int
		[Column,     NotNull] public DateTime IncomingDate  { get; set; } // date
		[Column,     NotNull] public DateTime OutcomingDate { get; set; } // date
		[Column,     NotNull] public decimal  Amount        { get; set; } // decimal(20, 4)
	}

	[Table(Schema="dbo", Name="SchemaVersions")]
	public partial class SchemaVersion
	{
		[PrimaryKey, Identity] public int      Id         { get; set; } // int
		[Column,     NotNull ] public string   ScriptName { get; set; } // nvarchar(255)
		[Column,     NotNull ] public DateTime Applied    { get; set; } // datetime
	}

	public static partial class TableExtensions
	{
		public static PaymentOrder Find(this ITable<PaymentOrder> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SchemaVersion Find(this ITable<SchemaVersion> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591
